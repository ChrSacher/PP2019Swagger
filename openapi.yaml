openapi: 3.0.0
info:
  title: Feedback System
  description: Feedback System for Uni lectures
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: localhost:8080
  description: Localhosted server
tags:
- name: Teacher
  description: Operations only aviable to logged in Teachers
- name: User
  description: Operations only aviable to logged in Users
- name: Any
  description: Operations aviable to anyone
- name: Course
  description: Operations belonging to courses
paths:
  /courses:
    get:
      tags:
      - User
      - Course
      summary: returns a list of courses
      description: This will return a list of courses
      operationId: courses
      responses:
        200:
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
        400:
          description: bad input parameter
  /courses/page/{pageNumber}:
    get:
      tags:
      - User
      - Course
      summary: returns a page of results of all aviable courses
      description: This will  return a page of results of all aviable courses
      operationId: coursesPage
      parameters:
      - name: pageNumber
        in: parameter
        description: Number of which page to get from all courses
        example: 2
        required: true
        style: form
        explode: true
        schema:
          type: int64
      responses:
        200:
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
        400:
          description: bad input parameter          
components:
  schemas:
    SimpleUser:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: "integer"
          format: "int64"
          example: 123
        name:
          type: string
          example: "Oliver Arnold"
    Course:
      required:
        - id
        - name
        - visibility
        - quizes
        - users
        - creator
      properties:
        id:
          type: "integer"
          format: "int64"
          example: 123
        name:
          type: string
          example: "Grundlagen der Programmierung"
        visibility:
          type: string
          description: "Visibility status"
          enum:
          - "hidden"
          - "readOnly"
          - "active"
        quizes:
          type: "array"
          items:
            $ref: "#/components/schemas/Quiz"
        users:
          type: "array"
          items:
            $ref: "#/components/schemas/SimpleUser"
        creator:
          $ref: "#/components/schemas/SimpleUser"
    Quiz:
      required:
        - id
        - name
        - visibility
        - questions
      properties:
        id:
          type: "integer"
          format: "int64"
          example: 123
        name:
          type: string
          example: "Grundlagen der Programmierung, Woche 3"
        visibility:
          type: string
          description: "Visibility status"
          enum:
          - "hidden"
          - "readOnly"
          - "active"
        quiestions:
          type: "array"
          items: 
            $ref: "#/components/schemas/Question"
    Question:
      requeired:
        - id
        - name
        - visibility
        - answers
      properties:
        id:
          type: "integer"
          format: "int64"
          example: 123
        name:
          type: string
          example: "Wie schwer waren die Aufgaben?"
        visibility:
          type: string
          description: "Visibility status"
          enum:
          - "hidden"
          - "readOnly"
          - "active"
        answers:
          type: "array"
          items: 
            $ref: "#/components/schemas/Answer"
    Answer:
      required:
        - id
        - answer
      properties:
        id:
          type: "integer"
          format: "int64"
          example: 123
        answer:
          type: string
          example: "Leicht"