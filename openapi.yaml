openapi: 3.0.0
info:
  title: Simple Inventory API
  description: This is a simple API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/PP2019/FeedbackBackend/1.0.0
  description: SwaggerHub API Auto Mocking
tags:
- name: admins
  description: Secured Admin-only calls
- name: developers
  description: Operations available to regular developers
paths:
  /inventory:
    get:
      tags:
      - developers
      summary: searches inventorydsf
      description: |
        By passing in the appropriate options, you can search for
        available inventory in the systemdsf
      operationId: searchInventory
      parameters:
      - name: searchString
        in: query
        description: pass an optional search string for looking up inventory
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: skip
        in: query
        description: number of records to skip for pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
      responses:
        200:
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InventoryItem'
        400:
          description: bad input parameter
    post:
      tags:
      - admins
      summary: adds an inventory item
      description: Adds an item to the system
      operationId: addInventory
      requestBody:
        description: Inventory item to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItem'
      responses:
        201:
          description: item created
        400:
          description: invalid input, object invalid
        409:
          description: an existing item already exists
components:
  schemas:
    SimpleUser:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: "integer"
          format: "int64"
          example: 123
        name:
          type: string
          example: "Oliver Arnold"
    Course:
      required:
        - id
        - name
        - visibility
        - quizes
        - users
        - creator
      properties:
        id:
          type: "integer"
          format: "int64"
          example: 123
        name:
          type: string
          example: "Grundlagen der Programmierung"
        visibility:
          type: string
          description: "Visibility status"
          enum:
          - "hidden"
          - "readOnly"
          - "active"
        quizes:
          type: "array"
          items:
            $ref: "#/components/schemas/Quiz"
        users:
          type: "array"
          items:
            $ref: "#/components/schemas/SimpleUser"
        creator:
          $ref: "#/components/schemas/SimpleUser"
    Quiz:
      required:
        - id
        - name
      properties:
        id:
          type: "integer"
          format: "int64"
          example: 123
        name:
          type: string
          example: "Grundlagen der Programmierung, Woche 3"